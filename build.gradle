
import org.flywaydb.gradle.task.FlywayMigrateTask
buildscript {
    ext {
        springBootVersion = "2.0.6.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath('mysql:mysql-connector-java:8.0.13')

    }
}


plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "java"
    id "org.flywaydb.flyway" version "6.3.0"
}

apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

springBoot {
    mainClassName = 'io.pivotal.pal.tracker.PalTrackerApplication'


}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("mysql:mysql-connector-java:6.0.6")

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'mysql:mysql-connector-java:8.0.13'

    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testCompile("org.junit.jupiter:junit-jupiter-engine:5.3.1")
    testCompile("org.mockito:mockito-core:2.22.0")
}

test{
    useJUnitPlatform()
}

def developmentDbUrl = "jdbc:mysql://localhost:3306/tracker_dev?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
bootRun.environment([
        "WELCOME_MESSAGE": "hello",
        "SPRING_DATASOURCE_URL": developmentDbUrl,
        "MANAGEMENT_SECURITY_ENABLED": false,
])

def testDbUrl = "jdbc:mysql://localhost:3306/tracker_test?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
test.environment([
        "WELCOME_MESSAGE": "Hello from test",
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_SECURITY_ENABLED": false,
])

flyway {
    url = developmentDbUrl
    user = "tracker"
    password = ""
    locations = ["filesystem:databases/tracker/migrations"]
}
task testMigrate(type: FlywayMigrateTask) {
    url = testDbUrl
}